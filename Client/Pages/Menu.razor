@page "/menu"
@layout MainLayout

@using Microsoft.AspNetCore.Components.Authorization
@using LunchApp.Shared.DTOs
@inject ApiService Api
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Nav

<h2 class="mb-4 text-center fw-bold">Today's Dishes</h2>

@if (!isAuthorized)
{
    <div class="text-center text-danger">Redirecting to login...</div>
}
else if (dishes == null)
{
    <div class="text-center"><div class="spinner-border"></div></div>
}
else
{
    <ul class="dish-list p-0">
        @foreach (var d in dishes)
        {
            <li class="dish-item">
                <div class="dish-image">
                    <img src="@d.ImageUrl" alt="@d.Name" />
                </div>
                <div class="dish-info">
                    <h5>@d.Name</h5>
                    <p class="text-muted">Portion: @d.Portion</p>
                    <p class="fw-bold fs-5">$@d.Price</p>
                </div>
                <div class="dish-actions">
                    @if (!d.Available)
                    {
                        <span class="badge sold-out-badge">Sold Out</span>
                        <button class="btn btn-secondary order-btn" disabled>Order</button>
                    }
                    else
                    {
                        <span class="badge available-badge">Available</span>
                        <button class="btn btn-success order-btn">Order</button>
                    }
                </div>
            </li>
        }
    </ul>
}

@code {
    private List<DishDto> dishes;
    private bool isAuthorized;

    protected override async Task OnInitializedAsync()
    {
        var auth = await AuthStateProvider.GetAuthenticationStateAsync();
        if (auth.User.Identity?.IsAuthenticated != true)
        {
            isAuthorized = false;
            Nav.NavigateTo("/login", forceLoad: true);
            return;
        }

        isAuthorized = true;
        dishes = await Api.GetTodayMenu();
    }
}
