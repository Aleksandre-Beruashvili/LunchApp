@page "/register"
@layout LoginLayout

@using LunchApp.Shared.DTOs
@inject AuthService AuthService
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthStateProvider

@* Redirect immediately if already logged in *@
@code {
    private RegisterDto model = new();
    private string error;

    protected override async Task OnInitializedAsync()
    {
        var auth = await AuthStateProvider.GetAuthenticationStateAsync();
        if (auth.User.Identity?.IsAuthenticated == true)
            Nav.NavigateTo("/menu", forceLoad: true);
    }

    private async Task HandleRegister()
    {
        error = null;
        var (ok, msg) = await AuthService.Register(model);
        if (ok)
            Nav.NavigateTo("/login", forceLoad: true);
        else
            error = msg;
    }
}

<div class="d-flex justify-content-center align-items-center" style="min-height: 70vh;">
    <EditForm Model="model" OnValidSubmit="HandleRegister" class="card p-4 shadow" style="width:100%;max-width:400px;">
        <DataAnnotationsValidator />
        <h3 class="text-center mb-4">Register</h3>

        <div class="mb-3">
            <InputText @bind-Value="model.FullName" class="form-control" placeholder="Full Name" />
            <ValidationMessage For="@(() => model.FullName)" class="text-danger" />
        </div>
        <div class="mb-3">
            <InputText @bind-Value="model.Email" class="form-control" placeholder="Email (credo.ge only)" />
            <ValidationMessage For="@(() => model.Email)" class="text-danger" />
        </div>
        <div class="mb-3">
            <InputText @bind-Value="model.Password" type="password" class="form-control" placeholder="Password" />
            <ValidationMessage For="@(() => model.Password)" class="text-danger" />
        </div>

        <button class="btn btn-success w-100" type="submit">Register</button>
        <div class="text-center mt-3">
            <a href="/login">Have an account? Login</a>
        </div>

        @if (!string.IsNullOrEmpty(error))
        {
            <div class="alert alert-danger mt-3">@error</div>
        }
    </EditForm>
</div>
