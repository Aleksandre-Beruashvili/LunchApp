@page "/register"
@using LunchApp.Shared.DTOs
@inject LunchApp.Client.Services.AuthService AuthService
@inject NavigationManager Nav

<EditForm Model="model" OnValidSubmit="HandleRegister"
          class="card mx-auto p-4 shadow-sm" style="max-width:400px;">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3 class="text-center mb-3">Register</h3>

    <div class="mb-3">
        <InputText @bind-Value="model.FullName"
                   class="form-control"
                   placeholder="Full Name" />
        <ValidationMessage For="@(() => model.FullName)" />
    </div>
    <div class="mb-3">
        <InputText @bind-Value="model.Email"
                   class="form-control"
                   placeholder="Email (credo.ge only)" />
        <ValidationMessage For="@(() => model.Email)" />
    </div>
    <div class="mb-3">
        <InputText @bind-Value="model.Password"
                   type="password"
                   class="form-control"
                   placeholder="Password" />
        <ValidationMessage For="@(() => model.Password)" />
    </div>

    <button class="btn btn-success w-100" type="submit">
        Register
    </button>

    @if (!string.IsNullOrEmpty(error))
    {
        <div class="alert alert-danger mt-3">@error</div>
    }
</EditForm>

@code {
    private RegisterDto model = new();
    private string error;

    private async Task HandleRegister()
    {
        error = null;
        var (ok, msg) = await AuthService.Register(model);
        if (ok)
            Nav.NavigateTo("/login");
        else
            error = msg;
    }
}
