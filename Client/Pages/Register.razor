@page "/register"
@inject AuthService AuthService
@inject NavigationManager Nav

<EditForm class="card p-4 mx-auto" style="max-width: 400px;" Model="regModel" OnValidSubmit="HandleRegister">
    <h3 class="text-center mb-3">Register</h3>
    <div class="mb-3">
        <InputText class="form-control" @bind-Value="regModel.Email" placeholder="Email" />
    </div>
    <div class="mb-3">
        <InputText class="form-control" @bind-Value="regModel.Password" type="password" placeholder="Password" />
    </div>
    <div class="mb-3">
        <InputText class="form-control" @bind-Value="regModel.ConfirmPassword" type="password" placeholder="Confirm Password" />
    </div>
    <button class="btn btn-primary w-100" type="submit">Register</button>
</EditForm>
@if (!string.IsNullOrEmpty(error))
{
    <p style="color:red">@error</p>
}

@code {
    RegisterModel regModel = new();
    string error;
    async Task HandleRegister()
    {
        error = string.Empty;
        if (regModel.Password != regModel.ConfirmPassword)
        {
            error = "Passwords do not match";
            return;
        }
        var success = await AuthService.Register(new RegisterDto { Email = regModel.Email, Password = regModel.Password });
        if (success) Nav.NavigateTo("/login");
        else error = "Register failed";
    }
    public class RegisterModel { public string Email { get; set; } public string Password { get; set; } public string ConfirmPassword { get; set; } }
}
