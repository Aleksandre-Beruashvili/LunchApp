@page "/order"
@inject ApiService Api

<h3>Place Order</h3>

@if (timeSlots == null)
{
    <p>Loading slots...</p>
}
else
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Select a pickup time:</h5>
            <ul class="list-group list-group-flush">
                @foreach (var slot in timeSlots)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@slot.Time (@slot.Count orders)</span>
                        <button class="btn btn-sm btn-outline-primary" @onclick="() => SelectTime(slot.Time)">Select</button>
                    </li>
                }
            </ul>
            @if (!string.IsNullOrEmpty(selectedTime))
            {
                <div class="mt-3">
                    <p class="mb-2">Selected: <strong>@selectedTime</strong></p>
                    <button class="btn btn-success" @onclick="SubmitOrder">Submit Order</button>
                </div>
            }
        </div>
    </div>
}

@code {
    List<TimeSlot> timeSlots;
    string selectedTime;

    protected override async Task OnInitializedAsync()
    {
        timeSlots = await Api.GetTimeSlots(DateTime.Today);
    }
    void SelectTime(string time) => selectedTime = time;
    async Task SubmitOrder()
    {
        var dto = new OrderCreateDto
        {
            SlotId = 1,
            Items = new List<OrderItemDto>
            {
                new() { DishId = 1, Quantity = 1 }
            }
        };
        await Api.PlaceOrder(dto);
    }
}
